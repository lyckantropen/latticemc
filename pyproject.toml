[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "latticemc"
version = "0.1.7"
authors = [
    {name = "Karol Trojanowski", email = "trojanowski.ifuj@gmail.com"},
]
description = "Simulations of lattice symmetry models of liquid crystals"
readme = "README.md"
license = {text = "MIT"}
keywords = ["lattice", "monte carlo", "biaxial", "nematic", "chirality"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX",
    "License :: OSI Approved :: MIT License",
]
requires-python = ">=3.9"
dependencies = [
    "jaxtyping>=0.2.0",
    "numba>=0.59.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "tensorboardX>=2.6.0",
    "matplotlib>=3.7.0",
    "joblib>=1.3.0",
    "tqdm>=4.6"
]

[project.optional-dependencies]
tests = [
    "pytest>=8.0.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-isort>=6.0.0",
    "flake8-pyproject>=1.2.0",
    "autopep8>=2.0.0",
    "mypy>=1.10.0",
    "pyfakefs>=5.9.0",
    "pytest-env>=1.1.0",
]
notebook = [
    "jupyterlab>=4.2.0",
    "ipywidgets>=8.1.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "pandas>=2.1.0",
    "ipympl>=0.9.0",
    "tensorboardX>=2.6.0",
]

[tool.setuptools]
packages = ["latticemc"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-continue-on-failure -rs"
testpaths = ["latticemc", "tests"]
env = [
    "NUMBA_DISABLE_JIT = 1",
    "NUMBA_CACHE_DIR = /tmp/numba_cache"
]

[tool.flake8]
max-line-length = 160
docstring-convention = "numpy"
ignore = [
    "W504",
    "D104",
    "D105",
    "F821",
    "F722"
]
per-file-ignores = [
    "tests/**:D,N",
]

[tool.isort]
line_length = 160
known_first_party = ["latticemc"]

[tool.autopep8]
max_line_length = 160
aggressive = 1
experimental = true

[tool.mypy]
ignore_missing_imports = true